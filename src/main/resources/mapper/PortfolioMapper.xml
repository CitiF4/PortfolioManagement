<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.PortfolioMapper">
  <resultMap id="BaseResultMap" type="Model.Portfolio">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />

    <result column="date" jdbcType="DATE" property="date" />
    <result column="cash" jdbcType="DOUBLE" property="curCash" />

    <result column="FMid" jdbcType="INTEGER" property="fmid" />
    <result column="initCash" jdbcType="DOUBLE" property="initCash" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, date, cash, FMid
  </sql>

  <update id="updatePortfolioById">
    update portfolio
    <set>
      <if test="name != null">name = #{name}</if>
    </set>
    where id=#{id}
  </update>

  <update id="updatePortfolio">
    UPDATE portfolio
    <set>
      <if test="name != null">name = #{name}</if>,
      <if test="cash != null">cash = #{cash}</if>,
      <if test ="date != null">date = #{date}</if>,
      <if test="fmid != null">fmid = #{fmid}</if>,
      <if test="initCash != null">initCash = #{initCash}</if>
    </set>
    where id = #{id}
  </update>

  <select id="selectByExample" parameterType="Model.PortfolioExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from portfolio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getPortfolios" resultType="Model.Portfolio">
    SELECT * FROM portfolio
  </select>
  <select id="getPortFolioByFundManagerID" resultType="Model.Portfolio">
    SELECT * FROM portfolio where FMid = #{fmID}
  </select>

  <select id="getPorfolio" resultType="Model.Portfolio">
    SELECT * FROM portfolio where id = #{portfolioId}
  </select>
  <delete id="deleteByExample" parameterType="Model.PortfolioExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from portfolio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deletePortfolio">
    DELETE FROM portfolio where id = #{portfolioId}
  </delete>
  <insert id="createPortfolio" parameterType="Model.Portfolio">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into portfolio (id, name, date, 
      cash, FMid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{cash,jdbcType=DECIMAL}, #{fmid,jdbcType=INTEGER})
  </insert>

  <insert id="createPortfolioByName">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into portfolio (name,cash,
     fmId, date)
    values (#{name,jdbcType=VARCHAR}, #{cash,jdbcType=DECIMAL},
    #{fmId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP})
  </insert>

  <resultMap id="selectPortMap" type="Model.Portfolio">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <collection column="id" ofType="Model.Position" property="positions" select="selectPosition" >
      <result column="position_id" property="id" />
      <result column="qty"  property="qty" />
      <result column="symbol" property="symbol" />
      <result column="price" property="price" />
      <result column="ccy" property="ccy" />
      <result column="type" property="type" />
      <result column="portfolioID" property="portfolioid" />
      <result column="date" property="date" />
      <result column="value" property="value" />
      <result column="profit" property="profit" />
    </collection>
  </resultMap>

  <select id="addPositionByPortId" resultMap="selectPortMap" resultType="Model.Portfolio">
    select * from portfolio where id = #{portfolioId}
  </select>

  <select id="selectPosition" parameterType="int" resultType="Model.Position">
    select * from position where portfolioid = #{portfolioid}
  </select>

</mapper>