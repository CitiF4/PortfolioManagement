<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.FundmanagerMapper">
  <resultMap id="BaseResultMap" type="Model.Fundmanager">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name
  </sql>

  <insert id="createFundmanager" parameterType="Model.Fundmanager">
    insert into fundmanager (id, name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="createFundManagerByName" >
    insert into fundmanager (name)
    values ( #{name,jdbcType=VARCHAR})
  </insert>

  <update id="updateFundmanager" parameterType="Model.Fundmanager">
    update fundmanager
    <set>
      <if test="name != null">name=#{name},</if>
    </set>
    where id=#{id}
  </update>


  <delete id="deleteFundmanager" parameterType="int">
    DELETE from fundmanager where id = #{Fmid}
  </delete>
  <select id="getFundManagers" resultType="Model.Fundmanager">
    SELECT * from fundmanager
  </select>
  <select id="getFundManager" resultType="Model.Fundmanager">
    SELECT * from fundmanager where id = #{FmId}
  </select>

  <select id="getFundManagerByName" resultType="Model.Fundmanager">
    SELECT * from fundmanager where name = #{name}
  </select>

  <select id="getFundManagerById" parameterType="int" resultType="Model.Fundmanager">
    SELECT * from fundmanager where id = #{id}
  </select>


  <resultMap id="selectFmMap" type="Model.Fundmanager">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <collection property="portfolios" ofType="Model.Portfolio" select="getPortfolio" column="id">
      <id property="id" column="id"/>
      <result property="id" column="id"/>
      <result property="name" column="name"/>
      <result property="date" column="date"/>
      <result property="curCash" column="cash"/>
      <result property="initCash" column="initCash"/>
      <result property="fmid" column="FMid"/>
    </collection>
</resultMap>
<select id="addPorfolioByfmId" parameterType="int" resultMap="selectFmMap">
  select * from fundmanager where id = #{fmid}
</select>

  <select id="getPortfolio" parameterType="int" resultType="Model.Portfolio">
    select * from portfolio where FMid = #{id}
  </select>
  <select id="getFundmanagerIdByName" resultType="java.lang.Integer">
    select id from fundmanager where name = #{name};
  </select>
</mapper>